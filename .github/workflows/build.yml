name: Publish Docker image

on:
  push:
    branches:
      - 'main'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test build "evoweb/postgres-cron-backup"

    steps:
      - uses: actions/checkout@v4

      - name: Test Bash scripts
        run: |
          make test-scripts

      - name: Test image
        env:
          VOLUME_PATH: /tmp/postgres
          POSTGRES_DB: foo
          POSTGRES_USER: bar
          POSTGRES_PASSWORD: baz
        run: |
          docker compose up -d postgres
          docker compose run --rm backup /Scripts/backup.sh
          docker compose run --rm backup /Scripts/restore.sh /backup/latest.foo.sql.gz
          docker compose stop

  build:
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        version: [ 16, 17 ]

    runs-on: ubuntu-latest
    name: Build "evoweb/postgres-cron-backup:${{ matrix.version }}" and push it to repository
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: evoweb/postgres-cron-backup

      # the following two steps fix ERROR: failed to build: Multi-platform build is not supported for the docker driver.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build multiarch image
        id: build
        run: |
          docker buildx build \
            --load \
            --no-cache \
            --compress \
            --progress=plain \
            --tag evoweb/postgres-cron-backup:${{ matrix.version }} \
            --platform linux/amd64 \
            --file Versions/${{ matrix.version }}.x/Dockerfile .
           echo "build-successful=${?}" >> ${GITHUB_OUTPUT}

      - name: Test the build image
        if: steps.build.outputs.build-successful == 0
        run: |
          docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/postgres-cron-backup:${{ matrix.version }} psql --version

      - name: Login to Docker Hub
        if: steps.build.outputs.build-successful == 0 && github.event_name != 'pull_request' && github.ref_name != 'main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build multi platform image
        if: steps.build.outputs.build-successful == 0 && github.event_name != 'pull_request' && github.ref_name != 'main'
        run: |
          docker buildx build \
            --push \
            --compress \
            --tag evoweb/postgres-cron-backup:${{ matrix.version }} \
            --tag evoweb/postgres-cron-backup:${{ matrix.version }}.x \
            --tag evoweb/postgres-cron-backup:${{ matrix.version }}.x-${{ github.ref_name }} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            --file Versions/${{ matrix.version }}.x/Dockerfile .
